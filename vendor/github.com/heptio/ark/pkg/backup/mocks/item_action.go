// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import backup "github.com/heptio/ark/pkg/backup"
import mock "github.com/stretchr/testify/mock"
import runtime "k8s.io/apimachinery/pkg/runtime"
import v1 "github.com/heptio/ark/pkg/apis/ark/v1"

// ItemAction is an autogenerated mock type for the ItemAction type
type ItemAction struct {
	mock.Mock
}

// AppliesTo provides a mock function with given fields:
func (_m *ItemAction) AppliesTo() (backup.ResourceSelector, error) {
	ret := _m.Called()

	var r0 backup.ResourceSelector
	if rf, ok := ret.Get(0).(func() backup.ResourceSelector); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(backup.ResourceSelector)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Execute provides a mock function with given fields: item, _a1
func (_m *ItemAction) Execute(item runtime.Unstructured, _a1 *v1.Backup) (runtime.Unstructured, []backup.ResourceIdentifier, error) {
	ret := _m.Called(item, _a1)

	var r0 runtime.Unstructured
	if rf, ok := ret.Get(0).(func(runtime.Unstructured, *v1.Backup) runtime.Unstructured); ok {
		r0 = rf(item, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(runtime.Unstructured)
		}
	}

	var r1 []backup.ResourceIdentifier
	if rf, ok := ret.Get(1).(func(runtime.Unstructured, *v1.Backup) []backup.ResourceIdentifier); ok {
		r1 = rf(item, _a1)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]backup.ResourceIdentifier)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(runtime.Unstructured, *v1.Backup) error); ok {
		r2 = rf(item, _a1)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
